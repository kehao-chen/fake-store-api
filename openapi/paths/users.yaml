# 使用者和購物車相關 API 端點定義
users_me:
  get:
    tags:
      - Users
    summary: 取得目前使用者資訊
    description: 獲取當前認證使用者的詳細資訊
    operationId: getCurrentUser
    security:
      - BearerAuth: ['read']
    responses:
      '200':
        description: 成功返回使用者資訊
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '400':
        $ref: '../components/responses/errors.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'
  
  patch:
    tags:
      - Users
    summary: 更新目前使用者資訊
    description: 更新當前認證使用者的個人資料
    operationId: updateCurrentUser
    security:
      - BearerAuth: ['write']
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/user.yaml#/UpdateUserRequest'
          examples:
            update_profile:
              summary: 更新個人資料
              value:
                first_name: "John"
                last_name: "Doe"
                phone: "+15550123"
    responses:
      '200':
        description: 使用者資訊更新成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'

users_item:
  get:
    tags:
      - Users
      - Admin
    summary: 取得指定使用者資訊
    description: 獲取指定使用者的資訊，需要管理員權限
    operationId: getUser
    security:
      - BearerAuth: ['read', 'admin']
    parameters:
      - name: id
        in: path
        required: true
        description: 使用者 ID
        schema:
          type: string
          pattern: '^user_[a-zA-Z0-9]+$'
          example: "user_123abc"
      - name: include_deleted
        in: query
        description: 是否包含已軟刪除的資源（僅管理員）
        schema:
          type: boolean
          default: false
    responses:
      '200':
        description: 成功返回使用者資訊
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/errors.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

# 購物車相關端點
users_me_cart:
  get:
    tags:
      - Cart
    summary: 取得目前使用者購物車
    description: 獲取當前使用者的購物車內容
    operationId: getCurrentUserCart
    security:
      - BearerAuth: ['read']
    responses:
      '200':
        description: 成功返回購物車內容
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'

users_cart:
  get:
    tags:
      - Cart
      - Admin
    summary: 取得指定使用者購物車
    description: 獲取指定使用者的購物車內容，需要管理員權限
    operationId: getUserCart
    security:
      - BearerAuth: ['read', 'admin']
    parameters:
      - name: id
        in: path
        required: true
        description: 使用者 ID
        schema:
          type: string
          pattern: '^user_[a-zA-Z0-9]+$'
      - name: include_deleted
        in: query
        description: 是否包含已軟刪除的資源（僅管理員）
        schema:
          type: boolean
          default: false
      - name: only_deleted
        in: query
        description: 僅返回已軟刪除的資源（僅管理員，與 include_deleted 互斥）
        schema:
          type: boolean
          default: false
    responses:
      '200':
        description: 成功返回購物車內容
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/errors.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_add_product:
  post:
    tags:
      - Cart
    summary: 新增產品到購物車
    description: 將指定產品加入到目前使用者的購物車
    operationId: addProductToCart
    security:
      - BearerAuth: ['write']
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/cart.yaml#/AddProductRequest'
          examples:
            add_single_item:
              summary: 新增單一產品
              value:
                product_id: "prod_1a2b3c"
                quantity: 1
            add_multiple_items:
              summary: 新增多個產品
              value:
                product_id: "prod_1a2b3c"
                quantity: 3
    responses:
      '200':
        description: 產品成功加入購物車
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_update_product:
  patch:
    tags:
      - Cart
    summary: 更新購物車產品數量
    description: 更新購物車中指定產品的數量
    operationId: updateCartProduct
    security:
      - BearerAuth: ['write']
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/cart.yaml#/UpdateProductRequest'
          examples:
            update_quantity:
              summary: 更新產品數量
              value:
                product_id: "prod_1a2b3c"
                quantity: 5
    responses:
      '200':
        description: 購物車產品數量更新成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_remove_product:
  post:
    tags:
      - Cart
    summary: 移除購物車產品
    description: 從購物車中移除指定的產品
    operationId: removeCartProduct
    security:
      - BearerAuth: ['write']
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/cart.yaml#/RemoveProductRequest'
          examples:
            remove_item:
              summary: 移除產品
              value:
                product_id: "prod_1a2b3c"
    responses:
      '200':
        description: 產品成功從購物車移除
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_clear:
  post:
    tags:
      - Cart
    summary: 清空購物車
    description: 清空目前使用者購物車中的所有產品
    operationId: clearCart
    security:
      - BearerAuth: ['write']
    responses:
      '200':
        description: 購物車清空成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'

cart_checkout:
  post:
    tags:
      - Cart
      - Orders
    summary: 購物車結帳
    description: |
      處理購物車結帳，建立訂單並啟動支付流程。
      
      ## 支付流程
      1. 驗證購物車內容
      2. 計算訂單總額
      3. 建立 Stripe 支付意圖
      4. 返回支付確認資訊
      
    operationId: checkoutCart
    security:
      - BearerAuth: ['write']
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/order.yaml#/CheckoutRequest'
          examples:
            basic_checkout:
              summary: 基本結帳
              value:
                payment_method: "stripe"
                billing_address:
                  line1: "123 Main St"
                  city: "San Francisco"
                  state: "CA"
                  postal_code: "94105"
                  country: "US"
    responses:
      '200':
        description: 結帳處理成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/order.yaml#/CheckoutResponse'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '402':
        $ref: '../components/responses/errors.yaml#/PaymentRequired'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'
