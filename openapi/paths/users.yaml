# 使用者和購物車相關 API 端點定義
users_me:
  get:
    tags:
      - Users
    summary: 取得目前使用者資訊
    description: 獲取當前認證使用者的詳細資訊
    operationId: getCurrentUser
    security:
      - OAuth2: ['read']
      - ApiKeyBearer: []
    responses:
      '200':
        description: 成功返回使用者資訊
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '400':
        $ref: '../components/responses/errors.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'
  
  patch:
    tags:
      - Users
    summary: 更新目前使用者資訊
    description: 更新當前認證使用者的個人資料
    operationId: updateCurrentUser
    security:
      - OAuth2: ['write']
      - ApiKeyBearer: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/user.yaml#/UpdateUserRequest'
          examples:
            update_profile:
              summary: 更新個人資料
              value:
                first_name: "John"
                last_name: "Doe"
                phone: "+15550123"
    parameters:
      - name: update_mask
        in: query
        required: false
        description: 要更新的欄位清單（AIP-134 updateMask；以逗號分隔）
        schema:
          type: string
          example: "first_name,last_name,phone"
    responses:
      '200':
        description: 使用者資訊更新成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'

users_item:
  get:
    tags:
      - Users
    summary: 取得指定使用者資訊
    description: 獲取指定使用者的資訊，需要管理員權限
    operationId: getUser
    security:
      - OAuth2: ['read', 'admin']
      - ApiKeyBearer: []
    parameters:
      - name: id
        in: path
        required: true
        description: 使用者 ID
        schema:
          type: string
          pattern: '^user_[a-zA-Z0-9]+$'
          example: "user_123abc"
      - $ref: '../components/parameters/common.yaml#/View'
    responses:
      '200':
        description: 成功返回使用者資訊
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yaml#/User'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/errors.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

# 購物車相關端點
users_me_cart:
  get:
    tags:
      - Cart
    summary: 取得目前使用者購物車
    description: 獲取當前使用者的購物車內容
    operationId: getCurrentUserCart
    security:
      - OAuth2: ['read']
      - ApiKeyBearer: []
    responses:
      '200':
        description: 成功返回購物車內容
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'

users_cart:
  get:
    tags:
      - Cart
    summary: 取得指定使用者購物車
    description: 獲取指定使用者的購物車內容，需要管理員權限
    operationId: getUserCart
    security:
      - OAuth2: ['read', 'admin']
      - ApiKeyBearer: []
    parameters:
      - name: id
        in: path
        required: true
        description: 使用者 ID
        schema:
          type: string
          pattern: '^user_[a-zA-Z0-9]+$'
      - $ref: '../components/parameters/common.yaml#/View'
    responses:
      '200':
        description: 成功返回購物車內容
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/errors.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_items_collection:
  post:
    tags:
      - Cart
    summary: 新增產品到購物車
    description: 將指定產品加入到目前使用者的購物車
    operationId: addCartItem
    security:
      - OAuth2: ['write']
      - ApiKeyBearer: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/cart.yaml#/AddProductRequest'
    responses:
      '200':
        description: 產品成功加入購物車
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_items_item:
  put:
    tags:
      - Cart
    summary: 更新購物車商品數量
    description: 更新購物車中指定產品的數量
    operationId: updateCartItem
    security:
      - OAuth2: ['write']
      - ApiKeyBearer: []
    parameters:
      - name: product_id
        in: path
        required: true
        description: 產品 ID
        schema:
          type: string
          pattern: '^prod_[a-zA-Z0-9]+$'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/cart.yaml#/UpdateProductRequest'
    responses:
      '200':
        description: 購物車產品數量更新成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

  delete:
    tags:
      - Cart
    summary: 移除購物車產品
    description: 從購物車中移除指定的產品
    operationId: removeCartItem
    security:
      - OAuth2: ['write']
      - ApiKeyBearer: []
    parameters:
      - name: product_id
        in: path
        required: true
        description: 產品 ID
        schema:
          type: string
          pattern: '^prod_[a-zA-Z0-9]+$'
    responses:
      '200':
        description: 產品成功從購物車移除
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/errors.yaml#/NotFound'

cart_clear:
  post:
    tags:
      - Cart
    summary: 清空購物車
    description: 清空目前使用者購物車中的所有產品（AIP-136 自訂方法 on resource）
    operationId: clearCart
    security:
      - OAuth2: ['write']
      - ApiKeyBearer: []
    responses:
      '200':
        description: 購物車清空成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/cart.yaml#/Cart'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'

cart_checkout:
  post:
    tags:
      - Cart
    summary: 購物車結帳
    description: |
      處理購物車結帳，建立訂單並啟動支付流程。
      
      ## 支付流程
      1. 驗證購物車內容
      2. 計算訂單總額
      3. 建立 Stripe 支付意圖
      4. 返回支付確認資訊
      
    operationId: checkoutCart
    security:
      - OAuth2: ['write']
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/order.yaml#/CheckoutRequest'
          examples:
            basic_checkout:
              summary: 基本結帳
              value:
                payment_method: "stripe"
                billing_address:
                  line1: "123 Main St"
                  city: "San Francisco"
                  state: "CA"
                  postal_code: "94105"
                  country: "US"
    responses:
      '200':
        description: 結帳處理成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/order.yaml#/CheckoutResponse'
      '400':
        $ref: '../components/responses/errors.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
      '402':
        $ref: '../components/responses/errors.yaml#/PaymentRequired'
      '500':
        $ref: '../components/responses/errors.yaml#/InternalError'
users_me_api_keys:
  get:
    tags:
      - Users
    summary: 列出我的 API Keys
    description: 取得當前使用者的 API Key 清單（僅回傳前綴與中繼資料）
    operationId: listMyApiKeys
    security:
      - OAuth2: ['read']
      - ApiKeyBearer: []
    responses:
      '200':
        description: 成功返回 API Keys
        content:
          application/json:
            schema:
              type: object
              properties:
                api_keys:
                  type: array
                  items:
                    $ref: '../components/schemas/auth.yaml#/ApiKey'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'

  post:
    tags:
      - Users
    summary: 建立新的 API Key
    description: 建立並回傳完整 API Key（僅此時可見完整 key）
    operationId: createMyApiKey
    security:
      - OAuth2: ['write']
    requestBody:
      required: false
      content:
        application/json:
          schema:
            $ref: '../components/schemas/auth.yaml#/CreateApiKeyRequest'
    responses:
      '201':
        description: 建立成功
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/CreateApiKeyResponse'
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'

users_me_api_keys_item:
  delete:
    tags:
      - Users
    summary: 刪除我的 API Key
    description: 撤銷指定的 API Key
    operationId: deleteMyApiKey
    security:
      - OAuth2: ['write']
    parameters:
      - name: id
        in: path
        required: true
        description: API Key 識別碼
        schema:
          type: string
          pattern: '^key_[a-zA-Z0-9]+$'
    responses:
      '204':
        description: 刪除成功
      '401':
        $ref: '../components/responses/errors.yaml#/Unauthorized'
